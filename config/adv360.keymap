#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    behaviors {
        #include "macros.dtsi"
      #include "version.dtsi"
      #ifndef VERSION_MACRO

        macro_ver: macro_ver {
            compatible = "zmk,behavior-macro";
            label = "macro_version";
            #binding-cells = <0>;
            bindings = <&kp RET>;
        };

        #endif

        &lt {  // layer-tap config
            flavor = "balanced";
            tapping-term-ms = <200>;
            quick-tap-ms = <175>;
        };

        hml: homerow_mods_left {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_LEFT";
            #binding-cells = <2>;
            tapping-term-ms = <300>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;

            require-prior-idle-ms = <150>;
            hold-trigger-key-positions = <22 40 54 56 55 41 23 24 42 43 25 26 44 58 57 65 67 66 68 69 70>;
            quick-tap-ms = <175>;
            hold-trigger-on-release;
        };

        hmr: homerow_mods_right {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_RIGHT";
            #binding-cells = <2>;
            tapping-term-ms = <300>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;

            require-prior-idle-ms = <150>;
            hold-trigger-key-positions = <18 19 17 15 16 29 48 30 47 49 31 32 50 51 33 65 67 66 68 69 70>;
            quick-tap-ms = <175>;
            hold-trigger-on-release;
        };
    };

    macros {
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&none  &none         &none        &none            &none          &none  &none                                                              &mo 2         &none  &none          &none        &none        &none            &none
&none  &kp Q         &kp W        &kp E            &kp R          &kp T  &none                                                              &none         &kp Y  &kp U          &kp I        &kp O        &kp P            &none
&none  &hml LCTRL A  &hml LALT S  &hml LEFT_GUI D  &hml LSHIFT F  &kp G  &none        &none        &none          &none      &none          &none         &kp H  &hmr RSHIFT J  &hmr LGUI K  &hmr LALT L  &hmr RCTRL SEMI  &none
&none  &kp Z         &kp X        &kp C            &kp V          &kp B                            &none          &none                                   &kp N  &kp M          &kp COMMA    &kp DOT      &kp FSLH         &none
&mo 1  &none         &none        &none            &none                 &lt 4 SPACE  &lt 5 ENTER  &lt 6 TAB      &lt 7 DEL  &kp BACKSPACE  &lt 3 ESCAPE         &none          &none        &none        &none            &mo 1
            >;
        };

        fn {
            bindings = <
&kp F1  &kp F2  &kp F3  &kp F4  &kp F5  &kp F6  &none                                       &mo 0   &kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12
&trans  &trans  &trans  &trans  &trans  &trans  &none                                       &none   &trans  &trans  &trans  &trans   &trans   &trans
&trans  &trans  &trans  &trans  &trans  &trans  &none   &trans  &trans      &trans  &trans  &none   &trans  &trans  &trans  &trans   &trans   &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans      &trans                  &trans  &trans  &trans  &trans   &trans   &trans
&trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans      &trans  &trans  &trans          &trans  &trans  &trans   &trans   &trans
            >;
        };

        mod {
            bindings = <
&none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &none                                                  &trans                  &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none         &none         &bootloader                                            &bootloader             &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none         &none         &none        &none  &none      &bt BT_CLR  &none       &rgb_ug RGB_MEFS_CMD 5  &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &macro_ver    &none                             &none      &none                                           &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none                       &none        &none  &none      &none       &bl BL_TOG  &rgb_ug RGB_TOG                &bl BL_INC  &bl BL_DEC  &none  &none  &none
            >;
        };

        sym {
            bindings = <
&trans  &trans       &trans             &trans                 &trans         &trans      &trans                                                                 &trans  &trans  &trans      &trans    &trans    &trans     &trans
&trans  &none        &kp RIGHT_BRACKET  &kp RIGHT_PARENTHESIS  &kp BACKSLASH  &kp DOLLAR  &trans                                                                 &trans  &trans  &trans      &trans    &trans    &none      &trans
&trans  &kp AMPS     &kp LEFT_BRACKET   &kp LEFT_PARENTHESIS   &kp EQUAL      &kp MINUS   &trans            &trans     &trans         &trans      &trans         &trans  &trans  &kp LSHIFT  &kp LGUI  &kp LALT  &kp RCTRL  &trans
&trans  &kp PERCENT  &kp HASH           &kp AT                 &kp EXCL       &kp ASTRK                                &trans         &trans                             &trans  &trans      &trans    &trans    &trans     &trans
&trans  &trans       &trans             &trans                 &trans                     &kp SINGLE_QUOTE  &kp GRAVE  &kp CARET      &kp DELETE  &kp BACKSPACE  &trans          &trans      &trans    &trans    &trans     &trans
            >;
        };

        nav {
            bindings = <
&trans  &trans     &trans    &trans    &trans     &trans  &trans                                      &trans  &trans    &trans    &trans  &trans     &trans  &trans
&trans  &trans     &trans    &trans    &trans     &trans  &trans                                      &trans  &trans    &trans    &trans  &trans     &trans  &trans
&trans  &kp LCTRL  &kp LALT  &kp LGUI  &kp LSHFT  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT  &trans  &trans
&trans  &trans     &trans    &trans    &trans     &trans                  &trans      &trans                  &trans    &trans    &trans  &trans     &trans  &trans
&trans  &trans     &trans    &trans    &trans             &trans  &trans  &trans      &trans  &trans  &trans            &trans    &trans  &trans     &trans  &trans
            >;
        };

        num {
            bindings = <
&trans  &trans     &trans    &trans    &trans          &trans  &trans                                       &trans  &trans  &trans  &trans        &trans  &trans  &trans
&trans  &trans     &trans    &trans    &trans          &trans  &trans                                       &trans  &trans  &kp N7  &kp N8        &kp N9  &trans  &trans
&trans  &kp LCTRL  &kp LALT  &kp LCMD  &kp LEFT_SHIFT  &trans  &trans  &trans  &trans      &trans  &trans   &trans  &trans  &kp N4  &kp N5        &kp N6  &trans  &trans
&trans  &trans     &trans    &trans    &trans          &trans                  &trans      &trans                   &trans  &kp N1  &kp NUMBER_2  &kp N3  &trans  &trans
&trans  &trans     &trans    &trans    &trans                  &trans  &trans  &trans      &trans  &kp DOT  &kp N0          &trans  &trans        &trans  &trans  &trans
            >;
        };

        fun {
            bindings = <
&trans  &trans     &trans    &trans    &trans     &trans  &trans                                      &trans  &trans   &trans  &trans  &trans  &trans  &trans
&trans  &trans     &trans    &trans    &trans     &trans  &trans                                      &trans  &kp F12  &kp F7  &kp F8  &kp F9  &trans  &trans
&trans  &kp LCTRL  &kp LALT  &kp LCMD  &kp LSHFT  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &kp F11  &kp F4  &kp F5  &kp F6  &trans  &trans
&trans  &trans     &trans    &trans    &trans     &trans                  &trans      &trans                  &kp F10  &kp F1  &kp F2  &kp F3  &trans  &trans
&trans  &trans     &trans    &trans    &trans             &trans  &trans  &trans      &trans  &trans  &trans           &trans  &trans  &trans  &trans  &trans
            >;
        };

        hyper {
            bindings = <
&trans  &trans                 &trans                 &trans                 &trans                 &trans                 &trans                                                                            &trans  &trans                 &trans                 &trans                     &trans                   &trans                    &trans
&trans  &kp LS(LC(LA(LG(Q))))  &kp LS(LA(LC(LG(W))))  &kp LS(LA(LC(LG(E))))  &kp LS(LA(LC(LG(R))))  &kp LS(LA(LC(LG(T))))  &trans                                                                            &trans  &kp LS(LA(LC(LG(Y))))  &kp LS(LA(LC(LG(U))))  &kp LS(LA(LC(LG(I))))      &kp LS(LA(LC(LG(O))))    &kp LS(LA(LC(LG(P))))     &trans
&trans  &kp LS(LA(LC(LG(A))))  &kp LS(LA(LC(LG(S))))  &kp LS(LA(LC(LG(D))))  &kp LS(LA(LC(LG(F))))  &kp LS(LA(LC(LG(G))))  &trans                     &trans                     &trans      &trans  &trans  &trans  &kp LS(LA(LC(LG(H))))  &kp LS(LA(LC(LG(J))))  &kp LS(LA(LC(LG(K))))      &kp LS(LA(LC(LG(L))))    &kp LS(LA(LC(LG(SEMI))))  &trans
&trans  &kp LS(LA(LC(LG(Z))))  &kp LS(LA(LC(LG(X))))  &kp LS(LA(LC(LG(C))))  &kp LS(LA(LC(LG(V))))  &kp LS(LA(LC(LG(B))))                                                        &trans      &trans                  &kp LS(LA(LC(LG(N))))  &kp LS(LA(LC(LG(M))))  &kp LS(LA(LC(LG(COMMA))))  &kp LS(LA(LC(LG(DOT))))  &kp LS(LA(LC(LG(FSLH))))  &trans
&trans  &trans                 &trans                 &trans                 &trans                                        &kp LS(LA(LC(LG(SPACE))))  &kp LS(LA(LC(LG(ENTER))))  &trans      &trans  &trans  &trans                         &trans                 &trans                     &trans                   &trans                    &trans
            >;
        };
    };
};
